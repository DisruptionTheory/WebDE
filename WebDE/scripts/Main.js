/*Generated by SharpKit 5 v4.27.4000*/
if(typeof(JsTypes) == "undefined")
    JsTypes = [];
var WebDE$Debug=
{
    fullname:"WebDE.Debug",
    baseTypeName:"System.Object",
    staticDefinition:
    {
        cctor:function()
        {
            WebDE.Debug.debugLog = new System.Collections.Generic.List$1.ctor(System.String);
            WebDE.Debug.manualClockRenders = new System.Collections.Generic.List$1.ctor(System.Action);
            WebDE.Debug.manualClockCalculations = new System.Collections.Generic.List$1.ctor(System.Action);
            WebDE.Debug.manualClockCreated = false;
            WebDE.Debug.DebugLayer = null;
            WebDE.Debug.Watches = new System.Collections.Generic.List$1.ctor(WebDE.Debug);
        },
        Message:function(message,msgName)
        {
            if(msgName == "" || msgName == null)
            {
            }
            else
            {
            }
        },
        log:function(message)
        {
            WebDE.Debug.debugLog.Add(message);
            message = message.Replace$$String$$String("\'","");
            console.log(message);
        },
        DebugClock:function(buttonTrigger)
        {
            if(WebDE.Debug.manualClockCreated == false)
            {
                WebDE.Debug.CreateManualClock();
            }
            var $it7=WebDE.Debug.manualClockRenders.GetEnumerator();
            while($it7.MoveNext())
            {
                var act=$it7.get_Current();
                act();
            }
            var $it8=WebDE.Debug.manualClockCalculations.GetEnumerator();
            while($it8.MoveNext())
            {
                var act=$it8.get_Current();
                act();
            }
        },
        AddCalculation:function(calculationToAdd)
        {
            WebDE.Debug.manualClockCalculations.Add(calculationToAdd);
        },
        AddRender:function(renderToAdd)
        {
            WebDE.Debug.manualClockRenders.Add(renderToAdd);
        },
        CreateManualClock:function()
        {
            var debugClock=new WebDE.GUI.GUIFunction.ctor$$String$$InputDevice$$String("DebugClock",WebDE.InputManager.InputDevice.Keyboard,"Plus");
            WebDE.InputManager.InputDevice.Keyboard.Bind$$String$$Int32$$GUIFunction("NumPlus",107,debugClock);
            WebDE.Debug.Render();
            WebDE.Debug.DebugLayer.SetGUIFunction(debugClock,WebDE.Debug.DebugClock);
            WebDE.Debug.manualClockCreated = true;
        },
        GetDebugLayer:function()
        {
            if(WebDE.Debug.DebugLayer == null)
            {
                WebDE.Debug.DebugLayer = WebDE.Rendering.View.GetMainView().AddLayer("DebugLayer",new WebDE.Rectangle.ctor(0,-40,800,40));
            }
            return WebDE.Debug.DebugLayer;
        },
        Watch:function(label,value)
        {
            if(WebDE.Debug.DebugLayer == null)
            {
                WebDE.Debug.Render();
            }
            var returnDebug=new WebDE.Debug.ctor();
            var exists=false;
            var $it9=WebDE.Debug.Watches.GetEnumerator();
            while($it9.MoveNext())
            {
                var watch=$it9.get_Current();
                if(watch.label == label)
                {
                    returnDebug = watch;
                    exists = true;
                }
            }
            returnDebug.label = label;
            returnDebug.value = value;
            if(exists == false)
            {
                returnDebug.debugElement = WebDE.Debug.GetDebugLayer().AddGUIElement("Debug element.");
                returnDebug.debugElement.SetPosition(0,WebDE.Debug.DebugLayer.GetGuiElements().get_Count() * 20);
                WebDE.Debug.Watches.Add(returnDebug);
            }
            WebDE.Debug.Render();
            return returnDebug;
        },
        Render:function()
        {
            var $it10=WebDE.Debug.Watches.GetEnumerator();
            while($it10.MoveNext())
            {
                var watch=$it10.get_Current();
                watch.debugElement.SetText(watch.label + " : " + watch.value);
            }
        }
    },
    assemblyName:"WebDE",
    Kind:"Class",
    definition:
    {
        ctor:function()
        {
            this.debugElement = null;
            this.label = null;
            this.value = null;
            System.Object.ctor.call(this);
        },
        UpdateValue:function(newValue)
        {
            this.value = newValue;
            WebDE.Debug.Render();
        }
    }
};
JsTypes.push(WebDE$Debug);
var WebDE$Game=
{
    fullname:"WebDE.Game",
    baseTypeName:"System.Object",
    staticDefinition:
    {
        cctor:function()
        {
            WebDE.Game.gameStages = new System.Collections.Generic.List$1.ctor(WebDE.GameObjects.Stage);
            WebDE.Game.renderer = null;
            WebDE.Game.environment = "HTML";
            WebDE.Game.globalEntities = new System.Collections.Generic.List$1.ctor(WebDE.GameObjects.GameEntity);
            WebDE.Game.hashedGlobalEntities = new System.Collections.Generic.Dictionary$2.ctor(System.String,WebDE.GameObjects.GameEntity);
            WebDE.Game.notificationLayer = null;
        },
        Init:function()
        {
            WebDE.InputManager.Input.Init();
            WebDE.Rendering.Surface.Initialize(new WebDE.Rendering.DOM_Renderer.ctor());
            var playerOneView=new WebDE.Rendering.View.ctor(0);
            playerOneView.SetArea(new WebDE.Rectangle.ctor(0,0,WebDE.Game.GetRenderer().GetSize().get_Item1(),WebDE.Game.GetRenderer().GetSize().get_Item2()));
            WebDE.Game.notificationLayer = playerOneView.AddLayer("NotificationLayer",new WebDE.Rectangle.ctor(0,0,0,0));
            WebDE.Game.notificationLayer.SetSize(522,60);
            var notifIcon=WebDE.Game.notificationLayer.AddGUIElement("");
            notifIcon.SetPosition(2,0);
            var notifSender=WebDE.Game.notificationLayer.AddGUIElement("");
            notifSender.SetPosition(-2,0);
            notifSender.SetSize(474,12);
            var notifText=WebDE.Game.notificationLayer.AddGUIElement("");
            notifText.SetPosition(-2,18);
            notifText.SetSize(474,40);
            var notif_repos=WebDE.Timekeeper.Clock.AddRender(WebDE.Game.reposition_notification_layeer);
            WebDE.Timekeeper.Clock.delayRender(notif_repos,2);
            WebDE.Timekeeper.Clock.AddCalculation(WebDE.Game.StandardCalculations);
            WebDE.Timekeeper.Clock.IntervalExecute(WebDE.Game.StandardIntervalCalculations,0.2);
        },
        StandardCalculations:function()
        {
            if(WebDE.GameObjects.Stage.CurrentStage != null)
            {
                WebDE.GameObjects.Stage.CurrentStage.CalculateEntities();
                if(WebDE.GameObjects.Stage.CurrentStage.GetLights().get_Count() > 0)
                {
                    WebDE.GameObjects.Stage.CurrentStage.CalculateLights();
                }
            }
        },
        StandardIntervalCalculations:function()
        {
            if(WebDE.GameObjects.Stage.CurrentStage != null)
            {
                WebDE.GameObjects.Stage.CurrentStage.CalculateGameEntityPhysics();
            }
        },
        reposition_notification_layeer:function()
        {
            var viewArea=WebDE.Rendering.View.GetMainView().GetViewArea();
            var newNotifX=viewArea.x + viewArea.width - WebDE.Game.notificationLayer.GetSize().get_Item1() - 12;
            var newNotifY=viewArea.x + viewArea.height - WebDE.Game.notificationLayer.GetSize().get_Item2() - 12;
            WebDE.Game.notificationLayer.SetPosition(newNotifX,newNotifY);
        },
        Notification:function(icon,sender,message,duration)
        {
            var notifIcon=WebDE.Game.notificationLayer.GetGuiElements().get_Item$$Int32(0);
            var notifSender=WebDE.Game.notificationLayer.GetGuiElements().get_Item$$Int32(1);
            var notifText=WebDE.Game.notificationLayer.GetGuiElements().get_Item$$Int32(2);
            notifIcon.SetSprite(icon);
            notifIcon.GetSprite().setSize(40,40);
            notifIcon.GetSprite().Animate();
            notifSender.SetText(sender);
            notifText.SetText(message);
        },
        CreateStage:function(stageName,stageType)
        {
            var newStage=new WebDE.GameObjects.Stage.ctor(stageName,stageType);
            if(WebDE.Rendering.View.GetMainView() != null && WebDE.Rendering.View.GetMainView().GetAttachedStage() == null)
            {
                WebDE.Rendering.View.GetMainView().AttachStage(newStage);
            }
            WebDE.Game.gameStages.Add(newStage);
            return newStage;
        },
        LoadStage:function(stageToLoad)
        {
        },
        SetAttribute:function(attributeValue)
        {
            if(attributeValue.toLowerCase() == "html")
            {
                WebDE.Game.environment = "HTML";
            }
        },
        GetEnvironment:function()
        {
            return WebDE.Game.environment;
        },
        GetGlobalGameEntity:function(GameEntityidentifier)
        {
            return null;
        },
        GetRenderer:function()
        {
            return WebDE.Game.renderer;
        },
        SetRenderer:function(newRenderer)
        {
            WebDE.Game.renderer = newRenderer;
        }
    },
    assemblyName:"WebDE",
    Kind:"Class",
    definition:
    {
        ctor:function()
        {
            System.Object.ctor.call(this);
        }
    }
};
JsTypes.push(WebDE$Game);
var WebDE$Main=
{
    fullname:"WebDE.Main",
    baseTypeName:"System.Object",
    staticDefinition:
    {
        cctor:function()
        {
            WebDE.Main.mainBase = null;
        },
        Initialize:function()
        {
            new WebDE.Main.ctor();
            WebDE.Game.Init();
            WebDE.Timekeeper.Clock.Start();
        },
        GetDocument:function()
        {
            return document;
        },
        GetWindow:function()
        {
            return window;
        },
        GetContext:function()
        {
            return WebDE.Main.mainBase;
        },
        consolelog:function(message)
        {
            console.log(message);
        }
    },
    assemblyName:"WebDE",
    Kind:"Class",
    definition:
    {
        ctor:function()
        {
            System.Object.ctor.call(this);
            WebDE.Main.mainBase = this;
        }
    }
};
JsTypes.push(WebDE$Main);
