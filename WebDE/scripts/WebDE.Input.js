/*Generated by SharpKit 5 v4.28.1000*/
if(typeof(JsTypes) == "undefined")
    JsTypes = [];
var WebDE$InputManager$Input=
{
    fullname:"WebDE.InputManager.Input",
    baseTypeName:"System.Object",
    staticDefinition:
    {
        cctor:function()
        {
            WebDE.InputManager.Input.disableAdvancedMouseInput = false;
            WebDE.InputManager.Input.onscreenKeyboard = false;
        },
        Init:function()
        {
            WebDE.InputManager.Input.Bind_Input_DOM();
            WebDE.InputManager.InputDevice.InitializeDevices();
        },
        LoadConfig:function(configKeyVals)
        {
        },
        ProcessMouseButtonEvent:function(buttonId,clickX,clickY,buttonCommand)
        {
            var buttonFunction=WebDE.InputManager.InputDevice.Mouse.GetFunctionFromButton$$String$$Int32$$ButtonCommand("",buttonId,buttonCommand);
            var $it22=WebDE.Rendering.View.GetActiveViews().GetEnumerator();
            while($it22.MoveNext())
            {
                var view=$it22.get_Current();
                if(clickX > view.GetArea().Right() || clickX < view.GetArea().x || clickY > view.GetArea().Bottom() || clickY < view.GetArea().y)
                {
                    continue;
                }
                view.GUI_Event(buttonFunction,clickX,clickY);
            }
        },
        ProcessKeyboardEvent:function(buttonId,buttonCommand)
        {
            var buttonFunction=WebDE.InputManager.InputDevice.Keyboard.GetFunctionFromButton$$String$$Int32$$ButtonCommand("",buttonId,buttonCommand);
            var $it23=WebDE.GUI.GuiLayer.GetActiveLayers().GetEnumerator();
            while($it23.MoveNext())
            {
                var activeLayer=$it23.get_Current();
                var actionLocation=new WebDE.Point.ctor(0,0);
                activeLayer.GUI_Event(buttonFunction,actionLocation);
            }
        },
        Bind_Input_DOM:function()
        {
            WebDE.Debug.log("Binding input to dom");
            $(document).bind("mousedown",WebDE.InputManager.Input.jQuery_handleClick);
            $(document).bind("mouseup",WebDE.InputManager.Input.jQuery_handleMouseUp);
            $(document).bind("keydown",WebDE.InputManager.Input.jQuery_handleKeyboardDown);
            $(document).bind("mousemove",WebDE.InputManager.Input.jQuery_handleMouseMove);
        },
        jQuery_handleClick:function(eventData)
        {
            var clickX=eventData.clientX - WebDE.GameObjects.Helpah.Parse(document.getElementById("gameWrapper").style.left);
            var clickY=eventData.clientY - WebDE.GameObjects.Helpah.Parse(document.getElementById("gameWrapper").style.top);
            WebDE.InputManager.Input.ProcessMouseButtonEvent(eventData.which,clickX,clickY,0);
        },
        jQuery_handleMouseUp:function(eventData)
        {
            var clickX=eventData.clientX - WebDE.GameObjects.Helpah.Parse(document.getElementById("gameWrapper").style.left);
            var clickY=eventData.clientY - WebDE.GameObjects.Helpah.Parse(document.getElementById("gameWrapper").style.top);
            WebDE.InputManager.Input.ProcessMouseButtonEvent(eventData.which,clickX,clickY,1);
        },
        jQuery_handleKeyboardDown:function(eventData)
        {
            WebDE.InputManager.Input.ProcessKeyboardEvent(eventData.which,0);
        },
        jQuery_handleMouseMove:function(eventData)
        {
            WebDE.InputManager.InputDevice.Mouse.SetAxisPosition(0,eventData.clientX);
            WebDE.InputManager.InputDevice.Mouse.SetAxisPosition(1,eventData.clientY);
        }
    },
    assemblyName:"WebDE",
    Kind:"Class",
    definition:
    {
        ctor:function()
        {
            System.Object.ctor.call(this);
        }
    }
};
JsTypes.push(WebDE$InputManager$Input);
var WebDE$InputManager$InputDevice=
{
    fullname:"WebDE.InputManager.InputDevice",
    baseTypeName:"System.Object",
    staticDefinition:
    {
        cctor:function()
        {
            WebDE.InputManager.InputDevice.Mouse = null;
            WebDE.InputManager.InputDevice.Keyboard = null;
        },
        InitializeDevices:function()
        {
            WebDE.InputManager.InputDevice.Mouse = new WebDE.InputManager.InputDevice.ctor("mouse");
            WebDE.InputManager.InputDevice.Keyboard = new WebDE.InputManager.InputDevice.ctor("keyboard");
            WebDE.InputManager.InputDevice.Mouse.SetButtonName(1,"mouse0");
            WebDE.InputManager.InputDevice.Keyboard.SetButtonName(187,"Plus");
            WebDE.InputManager.InputDevice.Keyboard.SetButtonName(107,"NumPlus");
        }
    },
    assemblyName:"WebDE",
    Kind:"Class",
    definition:
    {
        ctor:function(name)
        {
            this.deviceName = "";
            this.buttonNames = new System.Collections.Generic.Dictionary$2.ctor(System.Int32,System.String);
            this.buttonFunctions = new System.Collections.Generic.Dictionary$2.ctor(System.Int32,System.Collections.Generic.Dictionary$2);
            this.axisPositions = new System.Collections.Generic.Dictionary$2.ctor(System.Int32,System.Double);
            System.Object.ctor.call(this);
            this.deviceName = name;
        },
        SetButtonName:function(buttonId,buttonName)
        {
            this.buttonNames.set_Item$$TKey(buttonId,buttonName);
        },
        GetButtonName:function(buttonId)
        {
            return this.buttonNames.get_Item$$TKey(buttonId);
        },
        GetButtonId:function(buttonName)
        {
            var $it24=this.buttonNames.get_Keys().GetEnumerator();
            while($it24.MoveNext())
            {
                var buttonKey=$it24.get_Current();
                if(this.buttonNames.get_Item$$TKey(buttonKey) == buttonName)
                {
                    return buttonKey;
                }
            }
            return -1;
        },
        Bind$$String$$Int32$$ButtonCommand$$GUIFunction:function(buttonName,buttonId,buttonCommand,buttonFunction)
        {
            if(buttonName != "" && buttonName != null)
            {
                buttonId = this.GetButtonId(buttonName);
            }
            if(this.buttonFunctions.get_Item$$TKey(buttonId) == null)
            {
                this.buttonFunctions.set_Item$$TKey(buttonId,new System.Collections.Generic.Dictionary$2.ctor(WebDE.GUI.ButtonCommand,WebDE.GUI.GUIFunction));
            }
            this.buttonFunctions.get_Item$$TKey(buttonId).set_Item$$TKey(buttonCommand,buttonFunction);
        },
        Bind$$String$$Int32$$GUIFunction:function(buttonName,buttonId,buttonFunction)
        {
            this.Bind$$String$$Int32$$ButtonCommand$$GUIFunction(buttonName,buttonId,0,buttonFunction);
        },
        UnBind:function(buttonName,buttonId)
        {
        },
        GetFunctionFromButton$$String$$Int32$$ButtonCommand:function(buttonName,buttonId,buttonCommand)
        {
            if(buttonName != "" && buttonName != null)
            {
                buttonId = this.GetButtonId(buttonName);
            }
            if(this.buttonFunctions.get_Item$$TKey(buttonId) == null)
            {
                return null;
            }
            return this.buttonFunctions.get_Item$$TKey(buttonId).get_Item$$TKey(buttonCommand);
        },
        GetFunctionFromButton$$String$$Int32:function(buttonName,buttonId)
        {
            return this.GetFunctionFromButton$$String$$Int32$$ButtonCommand(buttonName,buttonId,0);
        },
        GetAxisPosition:function(axis)
        {
            return this.axisPositions.get_Item$$TKey(axis);
        },
        SetAxisPosition:function(axis,position)
        {
            this.axisPositions.set_Item$$TKey(axis,position);
        }
    }
};
JsTypes.push(WebDE$InputManager$InputDevice);
